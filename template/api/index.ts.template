import { Request, Response } from 'kts-scaffold-framework/server';
import { CallType } from 'kts-scaffold-framework/utils/ajax';
import { Urls } from 'src/entry/constant';
import ApiBasic from 'src/api/ApiBasic';
import IData from './IData';
import IOptions from './IOptions';

/**
 * 这里位置描述下api的内容是什么
 */
class {{name}} extends ApiBasic<IOptions, IData> {

    /** api逻辑的实现入口 */
    public async api(option: IOptions): Promise<Response<IData>> {

        const req: Request = new Request(CallType.POST, Urls./*API地址*/, this.working(option));

        let data: Response<IData> = await this.call(req);

        // 去掉注释开启数据加工
        /*
        if (data.er) {
            data = new Response<IData>(data.er);
        } else {
            data = new Response<IData>(data.er, new Data(data.body));
        }
        */

        /* ---- 如果有数据处理写在下面 ---- */

        return data;
    }

    /** 
     * 对入惨加工
     * @param option 原始如参数
     */
    private working(option: IOptions): any {
        return option;
    }
}

/** 对IData接口的实现 */
/*
class Data implements IData {

    constructor(body: any) {
    }
}
*/

export default new {{name}}().run;
